---
nodes:
  # - address: 172.30.1.38
  #   user: linuxboot
  #   role:
  #   - worker
  #   ssh_key_path: /home/platform/.ssh/id_rsa
  #   port: 22
  #   labels:
  #     app: ingress
  #     vlan: "50"
  - address: bdgpu.os
  user: platform
  role:
  - worker
  ssh_key_path: /home/platform/.ssh/id_rsa
  port: 22
  labels:
    app: ingress
    vlan: "50"
  # - address: 172.30.1.207
  - address: osv7smi14c.os
    user: platform
    role:
    - controlplane
    - etcd
    - worker
    ssh_key_path: /home/platform/.ssh/id_rsa
    port: 22
    labels:
      app: ingress
      vlan: "50"
  # - address: 172.30.1.208
  - address: osv7smi14a.os
    user: platform
    role:
    - controlplane
    - etcd
    - worker
    ssh_key_path: /home/platform/.ssh/id_rsa
    port: 22
    labels:
      vlan: "50"
  # - address: 172.30.1.211
  - address: osv7smi16c.os
    user: platform
    role:
    - controlplane
    - etcd
    - worker
    ssh_key_path: /home/platform/.ssh/id_rsa
    port: 22
    labels:
      app: ingress
      vlan: "50"
  # - address: 172.30.1.209
  - address: osv7smi14d.os
    user: platform
    role:
    - worker
    ssh_key_path: /home/platform/.ssh/id_rsa
    port: 22
    labels:
      vlan: "50"
  # - address: 172.30.1.210
  - address: osv7smi14b.os
    user: platform
    role:
    - worker
    ssh_key_path: /home/platform/.ssh/id_rsa
    port: 22
    labels:
      vlan: "50"
  # - address: 172.30.1.212
  - address: osv7smi16a.os
    user: platform
    role:
    - worker
    ssh_key_path: /home/platform/.ssh/id_rsa
    port: 22
    labels:
      vlan: "50"
  # - address: 172.30.1.215
  - address: osv7smi18c.os
    user: platform
    role:
    - worker
    ssh_key_path: /home/platform/.ssh/id_rsa
    port: 22
    labels:
      vlan: "50"
  # - address: 172.30.1.219
  - address: osv7smi20c.os
    user: platform
    role:
    - worker
    ssh_key_path: /home/platform/.ssh/id_rsa
    port: 22
    labels:
      vlan: "50"
  # - address: 172.30.5.12
  - address: kouda.os
    user: platform
    role:
    - worker
    ssh_key_path: /home/platform/.ssh/id_rsa
    port: 22
    labels:
      gpu: true
      gpu-type: NVIDIA_TITAN_X
      vlan: "55"
services:
  etcd:
  kube-api:
    service_cluster_ip_range: 10.233.0.0/18
    pod_security_policy: false
    extra_args:
      v: 4
    image: rancher/k8s:v1.9.5-rancher1-1
  kube-controller:
    cluster_cidr: 10.233.64.0/18
    service_cluster_ip_range: 10.233.0.0/18
    image: rancher/k8s:v1.9.5-rancher1-1
  scheduler:
    image: rancher/k8s:v1.9.5-rancher1-1
  kubelet:
    cluster_domain: gezora-osv.os
    cluster_dns_server: 10.233.0.3
    infra_container_image: gcr.io/google_containers/pause-amd64:3.0
    # extra_args: {"feature-gates": "Accelerators=true"} #for k8s 1.7 and less... but working for 1.8 too somehow
    extra_args: { feature-gates: "DevicePlugins=true"}
    image: rancher/k8s:v1.9.5-rancher1-1
  kubeproxy:
    image: rancher/k8s:v1.9.5-rancher1-1

authentication:
  strategy: x509

# all addon manifests MUST specify a namespace
addons: |-
    ---
    apiVersion: v1
    kind: Pod
    metadata:
      name: ingress-nginx
      namespace: default
    spec:
      containers:
      - name: ingress-nginx
        image: nginx
        ports:
        - containerPort: 80

# If set to true, rke won't fail when unsupported Docker version is found
ignore_docker_version: true
kubernetes_version: v1.9.5-rancher1-1

system_images:
  etcd: rancher/etcd:v3.0.17
  kubernetes: rancher/k8s:v1.9.5-rancher1-1
  alpine: alpine:latest
  nginx_proxy: rancher/rke-nginx-proxy:v0.1.1
  cert_downloader: rancher/rke-cert-deployer:v0.1.1
  kubernetes_services_sidecar: rancher/rke-service-sidekick:v0.1.0
  kubedns: rancher/k8s-dns-kube-dns-amd64:1.14.5
  dnsmasq: rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.5
  kubedns_sidecar: rancher/k8s-dns-sidecar-amd64:1.14.5
  kubedns_autoscaler: rancher/cluster-proportional-autoscaler-amd64:1.0.0
  # flannel: rancher/coreos-flannel:v0.9.1
  # flannel_cni: rancher/coreos-flannel-cni:v0.2.0
  # canal_node: rancher/calico-node:v3.0.2
  # canal_node: rancher/calico-node:v2.6.2
  # canal_cni: rancher/calico-cni:v2.0.0
  # canal_cni: rancher/calico-cni:v1.11.0
  # canal_flannel: rancher/coreos-flannel:v0.9.1

network:
  plugin: canal
  options:

ssh_key_path: /home/platform/.ssh/id_rsa
ssh_agent_auth: false

# Kubernetes authorization mode
# Use `mode: rbac` to enable RBAC
# Use `mode: none` to disable authorization
authorization:
  mode: rbac



# List of registry credentials, if you are using a Docker Hub registry,
# you can omit the `url` or set it to `docker.io`
private_registries:
  - url: docker.io
    # user: Username
    # password: password

# Currently only nginx ingress provider is supported.
# To disable ingress controller, set `provider: none`
# To enable ingress on specific nodes, use the node_selector, eg:
# nodes:
#   - address: example.com
#     user: ubuntu
#     role:
#     - role
#     hostname_override: node3
#     internal_address: 192.168.1.6
#     labels:
#       app: ingress
#
ingress:
  provider: nginx
  node_selector:
    app: ingress